# -*- coding: utf-8 -*-
"""LogisticRegression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ITqBCSE8x2-AU3_kcw30iEMYn4Ghh9Sp
"""

#logistic Regression Model
#tries to apply a curve that best fits the data
#is best used for transparency in what variables are contributing to the result
#not great at most real world situations as it requires clean data without outliers
#better with smaller datasets (less columns and rows)

#hyperparameters allow you to tune or tweak the algorithm
#logistic regresssion has the c hyperparamater which regularizes the data
#regularization helps handle overfitting, which is when the learning models fits to the test data too much

import pandas as pd
data = pd.read_csv('modifiedIris2Classes.csv')
data.head()

import seaborn as sns
import matplotlib.pyplot as plt

sns.heatmap(data.corr(), annot = True, cmap=sns.cubehelix_palette(as_cmap = True))

data.describe()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

x_train, x_test, y_train, y_test = train_test_split(data[['petal length (cm)', 'petal width (cm)', "sepal length (cm)", 'sepal width (cm)']], data['target'],random_state=3829482, test_size=0.2)

LogisticRegression().get_params()

clf = LogisticRegression()
clf.fit(x_train, y_train)

clf.predict(x_test)

x_test

#display accuracy
score = clf.score(x_test, y_test)
print(score)

#Confusion Matrix
#target is the type of flower and the confusion matrix is saying that based on the petal length we guessed wrong 1 time
from sklearn import metrics
cm = metrics.confusion_matrix(y_test, clf.predict(x_test))

plt.figure(figsize=(9,9))
sns.heatmap(cm, annot=True, cmap=sns.cubehelix_palette(as_cmap = True))

